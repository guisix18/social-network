// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id
  name String
  email String @unique
  password String
  resetToken String?
  createdAt DateTime
  updatedAt DateTime?
  active Boolean @default(true)
  posts Post[]
  comments Comments[]
  postsLikeds PostLikeds[]
  blockedUser BlockedUsers[] @relation("blockedUsers")
  reporterUser BlockedUsers[] @relation("reporterUsers")
  blockedAt DateTime? 
}

model Post {
  id String @id
  content String
  user User? @relation(fields: [userId], references: [id])
  userId String
  imageUrl String?
  imageFormat String?
  comments Comments[]
  postsLikeds PostLikeds[]
}

model Comments {
  id String @id
  text String
  user User? @relation(fields: [userId], references: [id])
  userId String
  post Post? @relation(fields: [postId], references: [id])
  postId String
  children Comments[] @relation("ParentChild")
  parentId String?
  parent Comments? @relation("ParentChild", fields: [parentId], references: [id])
}

model PostLikeds {
  id String @id
  user User? @relation(fields: [userId], references: [id])
  userId String 
  post Post? @relation(fields: [postId], references: [id])
  postId String 
  eventAt DateTime
  liked Boolean
}

model BlockedUsers {
  id String @id
  blockedUser User @relation("blockedUsers", fields: [blockedUserId], references: [id])
  blockedUserId String
  reason String
  reporterUser User? @relation("reporterUsers", fields: [reporterId], references: [id])
  reporterId String
  createdAt DateTime @default(now())
}
